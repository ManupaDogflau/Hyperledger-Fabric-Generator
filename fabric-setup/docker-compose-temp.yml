version: "3.4"
networks:
  dev:
    attachable: true

services:
#Insert1
 
 ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN}: 
  container_name: ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN}  
  image: hyperledger/fabric-orderer:${IMAGE_TAG1}  
  environment:  
    - ORDERER_GENERAL_LOGLEVEL=ERROR  
    - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0  
    - ORDERER_GENERAL_GENESISMETHOD=file  
    - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block  
    - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer/msp  
    # enabled TLS  
    - ORDERER_GENERAL_TLS_ENABLED=${TLS_ENABLED}  
    - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer/tls/server.key  
    - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer/tls/server.crt  
    - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]  
    - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=false  
    - ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]  
    - ORDERER_GENERAL_LOCALMSPID=${ORDERER1_NAME}MSP  
    - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1  
    - ORDERER_KAFKA_VERBOSE=true  
    - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/orderer/tls/server.crt  
    - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/orderer/tls/server.key  
    - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]  
  volumes:  
    - ${ORDERER1_PATH}/config/:/etc/hyperledger/configtx  
    - ${ORDERER1_PATH}/crypto-config/ordererOrganizations/${ORDERER1_DOMAIN}/orderers/${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN}:/etc/hyperledger/orderer  
    - ${ORDERER1_PATH}/hyp-data/orderer:/var/hyperledger/production/orderer  
  working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer  
  command: orderer  
  ports:  
   - 7050:7050  
  restart: always  
  logging:  
    driver: "json-file"  
    options:  
      max-file: 5  
      max-size: 10m  
  networks:  
    - dev  
 
 ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN}: 
  container_name: ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN}  
  image: hyperledger/fabric-orderer:${IMAGE_TAG1}  
  environment:  
    - ORDERER_GENERAL_LOGLEVEL=ERROR  
    - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0  
    - ORDERER_GENERAL_GENESISMETHOD=file  
    - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block  
    - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer/msp  
    # enabled TLS  
    - ORDERER_GENERAL_TLS_ENABLED=${TLS_ENABLED}  
    - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer/tls/server.key  
    - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer/tls/server.crt  
    - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]  
    - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=false  
    - ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]  
    - ORDERER_GENERAL_LOCALMSPID=${ORDERER1_NAME}MSP  
    - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1  
    - ORDERER_KAFKA_VERBOSE=true  
    - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/orderer/tls/server.crt  
    - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/orderer/tls/server.key  
    - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]  
  volumes:  
    - ${ORDERER2_PATH}/config/:/etc/hyperledger/configtx  
    - ${ORDERER2_PATH}/crypto-config/ordererOrganizations/${ORDERER1_DOMAIN}/orderers/${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN}:/etc/hyperledger/orderer  
    - ${ORDERER2_PATH}/hyp-data/orderer:/var/hyperledger/production/orderer  
  working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer  
  command: orderer  
  ports:  
   - 8050:7050  
  restart: always  
  logging:  
    driver: "json-file"  
    options:  
      max-file: 5  
      max-size: 10m  
  networks:  
    - dev  
 
 ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN}: 
  container_name: ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN}  
  image: hyperledger/fabric-orderer:${IMAGE_TAG1}  
  environment:  
    - ORDERER_GENERAL_LOGLEVEL=ERROR  
    - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0  
    - ORDERER_GENERAL_GENESISMETHOD=file  
    - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block  
    - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer/msp  
    # enabled TLS  
    - ORDERER_GENERAL_TLS_ENABLED=${TLS_ENABLED}  
    - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer/tls/server.key  
    - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer/tls/server.crt  
    - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]  
    - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=false  
    - ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]  
    - ORDERER_GENERAL_LOCALMSPID=${ORDERER1_NAME}MSP  
    - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1  
    - ORDERER_KAFKA_VERBOSE=true  
    - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/orderer/tls/server.crt  
    - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/orderer/tls/server.key  
    - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]  
  volumes:  
    - ${ORDERER3_PATH}/config/:/etc/hyperledger/configtx  
    - ${ORDERER3_PATH}/crypto-config/ordererOrganizations/${ORDERER1_DOMAIN}/orderers/${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN}:/etc/hyperledger/orderer  
    - ${ORDERER3_PATH}/hyp-data/orderer:/var/hyperledger/production/orderer  
  working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer  
  command: orderer  
  ports:  
   - 9050:7050  
  restart: always  
  logging:  
    driver: "json-file"  
    options:  
      max-file: 5  
      max-size: 10m  
  networks:  
    - dev  


#Insert2
 
 ca_${PEERORG1_NAME}: 
  image: hyperledger/fabric-ca:${IMAGE_TAG1} 
  environment: 
   - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server 
   - FABRIC_CA_SERVER_CA_NAME=ca_${PEERORG1_NAME} 
   - FABRIC_CA_SERVER_TLS_ENABLED=${TLS_ENABLED} 
   - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${PEERORG1_DOMAIN}-cert.pem 
   - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/PRIVATE_KEY_1 
  ports: 
   - 7054:7054 
  command: sh -c "fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.${PEERORG1_DOMAIN}-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/PRIVATE_KEY_1 -b admina:adminpw -d" 
  volumes: 
   - ${ORG1_PATH}/crypto-config/peerOrganizations/${PEERORG1_DOMAIN}/ca/:/etc/hyperledger/fabric-ca-server-config 
  container_name: ca_${PEERORG1_NAME} 
  networks: 
  - dev 
  restart: always 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  depends_on: 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 couchdb_${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}: 
  container_name: couchdb_${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN} 
  ports: 
   - 6984:5984 
  image: hyperledger/fabric-couchdb:${IMAGE_TAG2} 
  volumes: 
   - ${ORG1_PATH}/hyp-data/couchdb:/opt/couchdb/data 
  environment: 
   - COUCHDB_USER=admin 
   - COUCHDB_PASSWORD=P@ss123 
  networks: 
   - dev 
  volumes: 
    - ${ORG1_PATH}/hyp-data/couchdb/:/opt/couchdb/data 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  restart: always 
  depends_on: 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 ${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}: 
  container_name: ${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN} 
  image: hyperledger/fabric-peer:${IMAGE_TAG1} 
  environment: 
    - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock 
    - CORE_PEER_ID=${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN} 
    - CORE_PEER_LOCALMSPID=${PEERORG1_NAME}MSP 
    - CORE_PEER_ADDRESS=${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}:7051 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb_${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}:5984 
    - CORE_PEER_GOSSIP_BOOTSTRAP=${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}:7051 
    - CORE_PEER_GOSSIP_EXTERNALENDPOINT=${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}:7051 
    - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052 
    - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_dev 
    - FABRIC_LOGGING_SPEC=ERROR 
    - CORE_CHAINCODE_LOGGING_LEVEL=ERROR 
    - CORE_PEER_GOSSIP_USELEADERELECTION=true 
    - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer/msp 
    - CORE_PEER_GOSSIP_ORGLEADER=false 
    - CORE_PEER_PROFILE_ENABLED=true 
    #TLS Settings 
    - CORE_PEER_TLS_ENABLED=${TLS_ENABLED} 
    - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/peer/tls/server.crt 
    - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/peer/tls/server.key 
    - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/peer/tls/ca.crt 
    - CORE_PEER_TLS_CLIENTAUTHREQUIRED=false 
    - CORE_PEER_TLS_CLIENTCERT_FILE=/etc/hyperledger/peer/tls/server.crt 
    - CORE_PEER_TLS_CLIENTKEY_FILE=/etc/hyperledger/peer/tls/server.key 
    - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/peer/tls/ca.crt 
    #Couch DB config 
    - CORE_LEDGER_STATE_STATEDATABASE=CouchDB 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=P@ss123 
  volumes: 
    - /var/run/:/host/var/run/ 
    - ${ORG1_PATH}/config/:/etc/hyperledger/configtx 
    - ${ORG1_PATH}/crypto-config/peerOrganizations/${PEERORG1_DOMAIN}/peers/${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}:/etc/hyperledger/peer 
    - ${ORG1_PATH}/crypto-config/peerOrganizations/${PEERORG1_DOMAIN}/users:/etc/hyperledger/users 
    - ${ORG1_PATH}/hyp-data/peer/:/var/hyperledger/production 
  working_dir: /opt/gopath/src/github.com/hyperledger/peer 
  command: peer node start 
  restart: always 
  ports: 
    - 7051:7051 
    - 7053:7053 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  networks: 
    - dev 
  depends_on: 
    - couchdb_${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN} 
    - ca_${PEERORG1_NAME} 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 ca_${PEERORG2_NAME}: 
  image: hyperledger/fabric-ca:${IMAGE_TAG1} 
  environment: 
   - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server 
   - FABRIC_CA_SERVER_CA_NAME=ca_${PEERORG2_NAME} 
   - FABRIC_CA_SERVER_TLS_ENABLED=${TLS_ENABLED} 
   - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${PEERORG2_DOMAIN}-cert.pem 
   - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/PRIVATE_KEY_2 
  ports: 
   - 8054:7054 
  command: sh -c "fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.${PEERORG2_DOMAIN}-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/PRIVATE_KEY_2 -b admina:adminpw -d" 
  volumes: 
   - ${ORG2_PATH}/crypto-config/peerOrganizations/${PEERORG2_DOMAIN}/ca/:/etc/hyperledger/fabric-ca-server-config 
  container_name: ca_${PEERORG2_NAME} 
  networks: 
  - dev 
  restart: always 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  depends_on: 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 couchdb_${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN}: 
  container_name: couchdb_${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN} 
  ports: 
   - 7984:5984 
  image: hyperledger/fabric-couchdb:${IMAGE_TAG2} 
  volumes: 
   - ${ORG2_PATH}/hyp-data/couchdb:/opt/couchdb/data 
  environment: 
   - COUCHDB_USER=admin 
   - COUCHDB_PASSWORD=P@ss123 
  networks: 
   - dev 
  volumes: 
    - ${ORG2_PATH}/hyp-data/couchdb/:/opt/couchdb/data 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  restart: always 
  depends_on: 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 ${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN}: 
  container_name: ${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN} 
  image: hyperledger/fabric-peer:${IMAGE_TAG1} 
  environment: 
    - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock 
    - CORE_PEER_ID=${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN} 
    - CORE_PEER_LOCALMSPID=${PEERORG2_NAME}MSP 
    - CORE_PEER_ADDRESS=${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN}:7051 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb_${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN}:5984 
    - CORE_PEER_GOSSIP_BOOTSTRAP=${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN}:7051 
    - CORE_PEER_GOSSIP_EXTERNALENDPOINT=${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN}:7051 
    - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052 
    - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_dev 
    - FABRIC_LOGGING_SPEC=ERROR 
    - CORE_CHAINCODE_LOGGING_LEVEL=ERROR 
    - CORE_PEER_GOSSIP_USELEADERELECTION=true 
    - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer/msp 
    - CORE_PEER_GOSSIP_ORGLEADER=false 
    - CORE_PEER_PROFILE_ENABLED=true 
    #TLS Settings 
    - CORE_PEER_TLS_ENABLED=${TLS_ENABLED} 
    - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/peer/tls/server.crt 
    - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/peer/tls/server.key 
    - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/peer/tls/ca.crt 
    - CORE_PEER_TLS_CLIENTAUTHREQUIRED=false 
    - CORE_PEER_TLS_CLIENTCERT_FILE=/etc/hyperledger/peer/tls/server.crt 
    - CORE_PEER_TLS_CLIENTKEY_FILE=/etc/hyperledger/peer/tls/server.key 
    - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/peer/tls/ca.crt 
    #Couch DB config 
    - CORE_LEDGER_STATE_STATEDATABASE=CouchDB 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=P@ss123 
  volumes: 
    - /var/run/:/host/var/run/ 
    - ${ORG2_PATH}/config/:/etc/hyperledger/configtx 
    - ${ORG2_PATH}/crypto-config/peerOrganizations/${PEERORG2_DOMAIN}/peers/${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN}:/etc/hyperledger/peer 
    - ${ORG2_PATH}/crypto-config/peerOrganizations/${PEERORG2_DOMAIN}/users:/etc/hyperledger/users 
    - ${ORG2_PATH}/hyp-data/peer/:/var/hyperledger/production 
  working_dir: /opt/gopath/src/github.com/hyperledger/peer 
  command: peer node start 
  restart: always 
  ports: 
    - 8051:7051 
    - 8053:7053 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  networks: 
    - dev 
  depends_on: 
    - couchdb_${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN} 
    - ca_${PEERORG2_NAME} 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 ca_${PEERORG3_NAME}: 
  image: hyperledger/fabric-ca:${IMAGE_TAG1} 
  environment: 
   - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server 
   - FABRIC_CA_SERVER_CA_NAME=ca_${PEERORG3_NAME} 
   - FABRIC_CA_SERVER_TLS_ENABLED=${TLS_ENABLED} 
   - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${PEERORG3_DOMAIN}-cert.pem 
   - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/PRIVATE_KEY_3 
  ports: 
   - 9054:7054 
  command: sh -c "fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.${PEERORG3_DOMAIN}-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/PRIVATE_KEY_3 -b admina:adminpw -d" 
  volumes: 
   - ${ORG3_PATH}/crypto-config/peerOrganizations/${PEERORG3_DOMAIN}/ca/:/etc/hyperledger/fabric-ca-server-config 
  container_name: ca_${PEERORG3_NAME} 
  networks: 
  - dev 
  restart: always 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  depends_on: 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 couchdb_${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN}: 
  container_name: couchdb_${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN} 
  ports: 
   - 8984:5984 
  image: hyperledger/fabric-couchdb:${IMAGE_TAG2} 
  volumes: 
   - ${ORG3_PATH}/hyp-data/couchdb:/opt/couchdb/data 
  environment: 
   - COUCHDB_USER=admin 
   - COUCHDB_PASSWORD=P@ss123 
  networks: 
   - dev 
  volumes: 
    - ${ORG3_PATH}/hyp-data/couchdb/:/opt/couchdb/data 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  restart: always 
  depends_on: 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 ${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN}: 
  container_name: ${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN} 
  image: hyperledger/fabric-peer:${IMAGE_TAG1} 
  environment: 
    - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock 
    - CORE_PEER_ID=${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN} 
    - CORE_PEER_LOCALMSPID=${PEERORG3_NAME}MSP 
    - CORE_PEER_ADDRESS=${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN}:7051 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb_${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN}:5984 
    - CORE_PEER_GOSSIP_BOOTSTRAP=${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN}:7051 
    - CORE_PEER_GOSSIP_EXTERNALENDPOINT=${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN}:7051 
    - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052 
    - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_dev 
    - FABRIC_LOGGING_SPEC=ERROR 
    - CORE_CHAINCODE_LOGGING_LEVEL=ERROR 
    - CORE_PEER_GOSSIP_USELEADERELECTION=true 
    - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer/msp 
    - CORE_PEER_GOSSIP_ORGLEADER=false 
    - CORE_PEER_PROFILE_ENABLED=true 
    #TLS Settings 
    - CORE_PEER_TLS_ENABLED=${TLS_ENABLED} 
    - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/peer/tls/server.crt 
    - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/peer/tls/server.key 
    - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/peer/tls/ca.crt 
    - CORE_PEER_TLS_CLIENTAUTHREQUIRED=false 
    - CORE_PEER_TLS_CLIENTCERT_FILE=/etc/hyperledger/peer/tls/server.crt 
    - CORE_PEER_TLS_CLIENTKEY_FILE=/etc/hyperledger/peer/tls/server.key 
    - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/peer/tls/ca.crt 
    #Couch DB config 
    - CORE_LEDGER_STATE_STATEDATABASE=CouchDB 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=P@ss123 
  volumes: 
    - /var/run/:/host/var/run/ 
    - ${ORG3_PATH}/config/:/etc/hyperledger/configtx 
    - ${ORG3_PATH}/crypto-config/peerOrganizations/${PEERORG3_DOMAIN}/peers/${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN}:/etc/hyperledger/peer 
    - ${ORG3_PATH}/crypto-config/peerOrganizations/${PEERORG3_DOMAIN}/users:/etc/hyperledger/users 
    - ${ORG3_PATH}/hyp-data/peer/:/var/hyperledger/production 
  working_dir: /opt/gopath/src/github.com/hyperledger/peer 
  command: peer node start 
  restart: always 
  ports: 
    - 9051:7051 
    - 9053:7053 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  networks: 
    - dev 
  depends_on: 
    - couchdb_${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN} 
    - ca_${PEERORG3_NAME} 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 ca_${PEERORG4_NAME}: 
  image: hyperledger/fabric-ca:${IMAGE_TAG1} 
  environment: 
   - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server 
   - FABRIC_CA_SERVER_CA_NAME=ca_${PEERORG4_NAME} 
   - FABRIC_CA_SERVER_TLS_ENABLED=${TLS_ENABLED} 
   - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${PEERORG4_DOMAIN}-cert.pem 
   - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/PRIVATE_KEY_4 
  ports: 
   - 10054:7054 
  command: sh -c "fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.${PEERORG4_DOMAIN}-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/PRIVATE_KEY_4 -b admina:adminpw -d" 
  volumes: 
   - ${ORG4_PATH}/crypto-config/peerOrganizations/${PEERORG4_DOMAIN}/ca/:/etc/hyperledger/fabric-ca-server-config 
  container_name: ca_${PEERORG4_NAME} 
  networks: 
  - dev 
  restart: always 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  depends_on: 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 couchdb_${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN}: 
  container_name: couchdb_${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN} 
  ports: 
   - 9984:5984 
  image: hyperledger/fabric-couchdb:${IMAGE_TAG2} 
  volumes: 
   - ${ORG4_PATH}/hyp-data/couchdb:/opt/couchdb/data 
  environment: 
   - COUCHDB_USER=admin 
   - COUCHDB_PASSWORD=P@ss123 
  networks: 
   - dev 
  volumes: 
    - ${ORG4_PATH}/hyp-data/couchdb/:/opt/couchdb/data 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  restart: always 
  depends_on: 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
 
 ${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN}: 
  container_name: ${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN} 
  image: hyperledger/fabric-peer:${IMAGE_TAG1} 
  environment: 
    - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock 
    - CORE_PEER_ID=${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN} 
    - CORE_PEER_LOCALMSPID=${PEERORG4_NAME}MSP 
    - CORE_PEER_ADDRESS=${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN}:7051 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb_${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN}:5984 
    - CORE_PEER_GOSSIP_BOOTSTRAP=${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN}:7051 
    - CORE_PEER_GOSSIP_EXTERNALENDPOINT=${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN}:7051 
    - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052 
    - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_dev 
    - FABRIC_LOGGING_SPEC=ERROR 
    - CORE_CHAINCODE_LOGGING_LEVEL=ERROR 
    - CORE_PEER_GOSSIP_USELEADERELECTION=true 
    - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer/msp 
    - CORE_PEER_GOSSIP_ORGLEADER=false 
    - CORE_PEER_PROFILE_ENABLED=true 
    #TLS Settings 
    - CORE_PEER_TLS_ENABLED=${TLS_ENABLED} 
    - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/peer/tls/server.crt 
    - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/peer/tls/server.key 
    - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/peer/tls/ca.crt 
    - CORE_PEER_TLS_CLIENTAUTHREQUIRED=false 
    - CORE_PEER_TLS_CLIENTCERT_FILE=/etc/hyperledger/peer/tls/server.crt 
    - CORE_PEER_TLS_CLIENTKEY_FILE=/etc/hyperledger/peer/tls/server.key 
    - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/peer/tls/ca.crt 
    #Couch DB config 
    - CORE_LEDGER_STATE_STATEDATABASE=CouchDB 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin 
    - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=P@ss123 
  volumes: 
    - /var/run/:/host/var/run/ 
    - ${ORG4_PATH}/config/:/etc/hyperledger/configtx 
    - ${ORG4_PATH}/crypto-config/peerOrganizations/${PEERORG4_DOMAIN}/peers/${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN}:/etc/hyperledger/peer 
    - ${ORG4_PATH}/crypto-config/peerOrganizations/${PEERORG4_DOMAIN}/users:/etc/hyperledger/users 
    - ${ORG4_PATH}/hyp-data/peer/:/var/hyperledger/production 
  working_dir: /opt/gopath/src/github.com/hyperledger/peer 
  command: peer node start 
  restart: always 
  ports: 
    - 10051:7051 
    - 10053:7053 
  logging: 
    driver: "json-file" 
    options: 
      max-file: 5 
      max-size: 10m 
  networks: 
    - dev 
  depends_on: 
    - couchdb_${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN} 
    - ca_${PEERORG4_NAME} 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 



#Insert3
 cli: 
  container_name: cli 
  image: hyperledger/fabric-tools:${IMAGE_TAG1} 
  tty: true 
  environment: 
   - SYS_CHANNEL=byfn-sys-channel 
   - GOPATH=/opt/gopath 
   - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock 
   - FABRIC_LOGGING_SPEC=ERROR 
   - CORE_PEER_ID=cli 
   - CORE_PEER_ADDRESS=${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}:7051 
   - CORE_PEER_LOCALMSPID=${PEERORG1_NAME}MSP 
   - CORE_PEER_TLS_ENABLED=${TLS_ENABLED} #Should be kept to true if not running event listenr 
   - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${PEERORG1_DOMAIN}/peers/${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}/tls/server.crt 
   - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${PEERORG1_DOMAIN}/peers/${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}/tls/server.key 
   - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${PEERORG1_DOMAIN}/peers/${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN}/tls/ca.crt 
   - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${PEERORG1_DOMAIN}/users/Admin@${PEERORG1_DOMAIN}/msp 
   - CORE_PEER_TLS_CLIENTAUTHREQUIRED=false 
   - CORE_PEER_TLS_CLIENTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${PEERORG1_DOMAIN}/users/${PEERORG1_DOMAIN}/tls/server.crt 
   - CORE_PEER_TLS_CLIENTKEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${PEERORG1_DOMAIN}/users/${PEERORG1_DOMAIN}/tls/server.key 
   - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/${PEERORG1_DOMAIN}/users/${PEERORG1_DOMAIN}/tls/ca.crt 
   - CORE_CHAINCODE_KEEPALIVE=10 
  working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer 
  command: /bin/bash 
  volumes: 
   - /var/run/:/host/var/run/ 
   - ./../chaincode/:/opt/gopath/src/github.com/chaincode/ 
   - ./crypto-config/:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ 
   - ./config:/opt/gopath/src/github.com/hyperledger/fabric/peer/configtx 
   - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/ 
  networks: 
   - dev 
  logging: 
        driver: "json-file" 
        options: 
            max-file: 5 
            max-size: 10m 
  depends_on: 
    - ${ORDERER3_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER2_HOSTNAME}_${ORDERER1_DOMAIN} 
    - ${ORDERER1_HOSTNAME}_${ORDERER1_DOMAIN} 
    #ORDERER_GROUP 
    - ${PEERORG4_HOSTNAME1}_${PEERORG4_DOMAIN} 
    - ${PEERORG3_HOSTNAME1}_${PEERORG3_DOMAIN} 
    - ${PEERORG2_HOSTNAME1}_${PEERORG2_DOMAIN} 
    - ${PEERORG1_HOSTNAME1}_${PEERORG1_DOMAIN} 
    #PEER_GROUP  








